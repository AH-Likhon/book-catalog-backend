// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id  @default(uuid())
  name String 
  email  String   @unique
  password String
  role UserRole
  contactNo String
  address String
  profileImg String
  reviews ReviewAndRating[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Category {
  id String @id @default(uuid())
  title String
  books Book[]

  @@map("categories")
}

model Book {
  id String @id @default(uuid())
  title String
  author String
  genre String
  price Float
  publicationDate String
  categoryId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  category Category @relation(fields: [categoryId],references: [id])
  orderBook OrderedBook[]
  reviews ReviewAndRating[]
  @@map("books")
}

model ReviewAndRating {
  id String @id @default(uuid())
  review String
  rating Int
  userId String
  user User @relation(fields: [userId],references: [id])
  bookId String
  book Book @relation(fields: [bookId],references: [id])
}
model Order {
  id String @id @default(uuid())
  userId String
  status Status @default(pending)
  createdAt DateTime @default(now())
  orderBooks OrderedBook[]

  @@map("orders")
}
model OrderedBook {
  id String @id @default(uuid())
  orderId String
  bookId String
  quantity Int
  order Order @relation(fields: [orderId],references: [id])
  book Book @relation(fields: [bookId],references: [id])
  
  @@map("orderedBooks")
}


enum UserRole {
  admin
  customer
}


enum Status {
  pending
  shipped
  delivered
}